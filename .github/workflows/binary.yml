name: Binary

on:
  push:
    paths:
      - ".github/workflows/binary.yml"
      - "src/**"
      - "Cargo.toml"

  workflow_dispatch:

jobs:
  binary:
    name: Build
    runs-on: [linux, x64]
    strategy:
      matrix:
        target: [x86_64-unknown-linux-musl]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: chetan/git-restore-mtime-action@v2

      - name: Setup environment
        id: setup-env
        run: |
          sudo apt update && sudo apt install -y musl-tools musl-dev clang lld

      - name: Setup rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: cargo-${{ runner.os }}-${{ steps.setup-env.outputs.cache_v }}
          restore-keys: |
            cargo-${{ runner.os }}-

      - name: Cache target
        uses: actions/cache@v4
        with:
          path: target/
          key: rustc-${{ runner.os }}-${{ matrix.target }}-${{ steps.setup-env.outputs.cache_v }}
          restore-keys: |
            rustc-${{ runner.os }}-${{ matrix.target }}-
            rustc-${{ runner.os }}-

      - name: Build on version ${{ env.app_v }}-${{ env.commit_sha }}
        run: |
          base64 -d <<< '${{ vars.PUBKEY_BASE64 }}' > config/pub.bin
          cargo build --bin quic-tun --release --target '${{ matrix.target }}'

      - name: Upload artifact
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: quic-tun
          path: target/${{ matrix.target }}/release/quic-tun
          retention-days: 1